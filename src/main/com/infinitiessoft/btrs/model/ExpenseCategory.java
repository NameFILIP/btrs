package com.infinitiessoft.btrs.model;

// Generated Jul 9, 2012 10:51:06 AM by Hibernate Tools 3.2.4.GA


import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;


/**
 * ExpenseTypes generated by hbm2java
 */
@Entity
@Table(name = "expense_categories")
public class ExpenseCategory implements java.io.Serializable {

	private static final long serialVersionUID = -8880786274284098835L;

	private Long id;
	private String nameKey;
	private String code;
	private List<ExpenseType> expenseTypes;
	

	
	public ExpenseCategory() {}

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}


	@Column(name = "name_key", nullable = false, length = 100)
	@NotNull
	@Length(max = 1000)
	public String getNameKey() {
		return nameKey;
	}

	public void setNameKey(String nameKey) {
		this.nameKey = nameKey;
	}

	@Column(name = "code", nullable = false, length = 100)
	@NotNull
	@Length(max = 1000)
	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@OrderBy("value")
	@ManyToMany(cascade = {CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
	@JoinTable(name = "exp_category_exp_type",
		joinColumns = @JoinColumn(name = "category_id"),
		inverseJoinColumns = @JoinColumn(name = "type_id"))
	public List<ExpenseType> getExpenseTypes() {
		if (expenseTypes == null) {
			expenseTypes = new ArrayList<ExpenseType>(0);
		}
		return this.expenseTypes;
	}

	public void setExpenseTypes(List<ExpenseType> expenseTypes) {
		this.expenseTypes = expenseTypes;
	}

}
