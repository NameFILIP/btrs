package com.infinitiessoft.btrs.model;

// Generated Jul 9, 2012 10:51:06 AM by Hibernate Tools 3.2.4.GA

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users")
public class User implements java.io.Serializable {

	private static final long serialVersionUID = -8023930147308505208L;

	private Long id;
	private Department department;
	private Date lastLogin;
	private Long userSharedId;
	private List<Role> roles;
	private Set<StatusChange> statusChanges;
	private Set<Report> outgoingReports;
	private Set<Report> incomingReports;


	public User() {}

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToMany
	@JoinTable(name = "users_roles",
		joinColumns = @JoinColumn(name = "user_id"),
		inverseJoinColumns = @JoinColumn(name = "role_id"))
	public List<Role> getRoles() {
		if (roles == null) {
			roles = new ArrayList<Role>(0);
		}
		return roles;
	}

	public void setRoles(List<Role> roles) {
		this.roles = roles;
	}
	
	@Transient
	public boolean addRole(Role role) {
		return this.getRoles().add(role);
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "department_id")
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}


	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_login", length = 29)
	public Date getLastLogin() {
		return this.lastLogin;
	}

	public void setLastLogin(Date lastLogin) {
		this.lastLogin = lastLogin;
	}

	@OneToMany(mappedBy = "user", cascade = CascadeType.ALL)
	public Set<StatusChange> getStatusChanges() {
		if (statusChanges == null) {
			statusChanges = new HashSet<StatusChange>(0);
		}
		return this.statusChanges;
	}

	public void setStatusChanges(Set<StatusChange> statusChanges) {
		this.statusChanges = statusChanges;
	}

	@OneToMany(mappedBy = "owner", cascade = CascadeType.ALL)
	public Set<Report> getOutgoingReports() {
		if (outgoingReports == null) {
			outgoingReports = new HashSet<Report>(0);
		}
		return this.outgoingReports;
	}

	public void setOutgoingReports(Set<Report> outgoingReports) {
		this.outgoingReports = outgoingReports;
	}
	
	@OneToMany(mappedBy = "reviewer", cascade = CascadeType.ALL)
	public Set<Report> getIncomingReports() {
		if (incomingReports == null) {
			incomingReports = new HashSet<Report>(0);
		}
		return this.incomingReports;
	}

	public void setIncomingReports(Set<Report> incomingReports) {
		this.incomingReports = incomingReports;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((userSharedId == null) ? 0 : userSharedId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		User other = (User) obj;
		if (userSharedId == null) {
			if (other.getUserSharedId() != null)
				return false;
		} else if (!userSharedId.equals(other.getUserSharedId()))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "User [userSharedId=" + userSharedId + ", roles=" + roles + "]";
	}

	@Column(name = "user_shared_id", unique = true, nullable = false)
	public Long getUserSharedId() {
		return userSharedId;
	}

	public void setUserSharedId(Long userSharedId) {
		this.userSharedId = userSharedId;
	}

}
